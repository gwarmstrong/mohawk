#!/usr/bin/env python

import os
import click
from mohawk.classify import classify as classify_dl


@click.group()
def mohawk():
    pass


@mohawk.command()
@click.option('--model', type=click.Path(exists=True),
              help='A path to a trained model', required=True)
@click.option('--sequence-file', type=click.File('rb'),
              help='A sequence files', required=True)
@click.option('--length', type=int, default=150, required=False,
              help='The length of sequences to produce')
@click.option('--output-file', type=click.File('wb'),
              help='The file to save the output', required=True)
@click.option('--batch-size', type=int, default=64, required=False,
              'Batch size to use for classification')
def classify(model, sequence_file, length, output_file, batch_size):
    # TODO more options for fastq i/o
    format = 'fastq'
    format_kwargs = {'phred_offset': 33}
    results = classify_dl(model, length, sequence_file,
                          batch_size=batch_size,
                          format_=format,
                          format_kwargs=format_kwargs)

    results.to_csv(output_file.name, sep='\t', index=False)

# TODO a function for training...


if __name__ == '__main__':
    mohawk()
